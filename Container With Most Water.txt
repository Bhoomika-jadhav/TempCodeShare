```
class Solution:
    def maxArea(self, height: List[int]) -> int:
        res = 0
        l, r = 0, len(height)-1
        while l < r:
            area = (r - l) * min(height[l], height[r])
            res = max(res, area)
            if height[l] < height[r]:
                l += 1
            else:
                r -= 1
                
        return res
```
prices = [7, 1, 5, 3, 6, 4]


def toTheMoon(prices):
    out=0
    for i in range(len(prices)-1):
        nextmax = max(prices[i+1:])
        print(nextmax)
  
```
prices = [7, 1, 5, 3, 6, 4]


def toTheMoon(prices):
    out = 0
    for i in range(len(prices)-1):
        for j in range(i+1, len(prices)):
            if nums[j]-nums[i]>out:
                out = nums[j] - nums[i]
    return out 
```
prices = [7, 1, 5, 3, 6, 4]


def toTheMoon(prices):
    sell = 0
    for i in range(len(prices)-1):
        for j in range(i+1, len(prices)):
            if prices[j] > prices[i]:
                sell = max(sell, prices[j])

    profit = sell - prices[i]
    return profit


res = toTheMoon(prices)
print(res)

```
