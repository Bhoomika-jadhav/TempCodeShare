```
nums = [2, 7, 11, 15]
target = 18


def twoSum(nums, target): # key is element, values is index
    map = {}
    for i in nums:
        sub = target - i
        if sub in map:
            return [map.values(sub), nums.index(i)]
```

```
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        hashmap = {}
        for i in range(len(nums)):
            if nums[i] in hashmap:
                return [hashmap[nums[i]]+1,i+1]
            else:
                hashmap[target - nums[i]]= i
```

```
class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        l,r=0, len(numbers)-1
        while l<r:
            s=numbers[l]+numbers[r]
            if s==target:
                return [l+1,r+1]
            elif s<target:
                l+=1
            else:
                r-=1
```
